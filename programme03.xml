<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Programme SYSTEM "assets/programmePedago.dtd">
<?xml-stylesheet href="assets/css/style.css" type="text/css" ?>
<root>
  <Programme>
  	<Module group='DeveloppeurLogiciel' language='CCP1'> <!-- Maquetter une application -->
  		<Objectif>Maquetter une application</Objectif>
  		<SousObjectif>Mockup, Wireframe, PageFlow, CharteGraphique</SousObjectif>
  		<PreRequis>Etre inscrit à la Code Académie</PreRequis>
  		<Materiel>Ordinateur, Internet</Materiel>
  		<Sequence> <!-- Maquetter une application -->
  			<Objectif>Maquetter une application</Objectif>
  			<SousObjectif>Savoir faire une  wireframe, une maquette. Respecter la charte graphique d'une entreprise</SousObjectif>
        <Code> CGR </Code>
        <Activite>
            <Type>Brainstorming</Type>
            <Objectif>Une charte graphique? Qu'est ce que ca couvre ?</Objectif>
            <SousObjectif>Importance du respect de la charte</SousObjectif>
            <Code>CGR01</Code>
            <Temps>1</Temps>
            <Description>Autour de la thématique des chartes graphiques, les apprenants doivent lister l'ensemble des thématiques qu'une charte graphique peut couvrir. Mais surout l'importance de l'intégrateur de respecteur chaque clause présente.</Description>
        </Activite>
        <Activite>
            <Type>Exercice</Type>
            <Objectif>Cette maquette respecte-t-elle la charte graphique ?</Objectif>
            <Code>CGR10</Code>
            <Temps>1</Temps>
            <Description>TODO : Individuellement, chaque apprenant doit lire une charte graphique, parcourir un ensemble de maquettes et stipuler si la maquette respecte ou non la charte.</Description>
        </Activite>
        
  			<Activite>
            <Type>Exercice</Type>
            <Objectif>Maquetter une application</Objectif>
	          <Code>CSS13</Code>
	          <Temps>6</Temps>
	          <Description>A partir d'un cahier des charges succint, chaque apprenant doit individuellement réaliser un wireframe ainsi qu'une maquette</Description>
        </Activite>
  		</Sequence>
  		<Sequence> <!-- Lire un use case et en formaliser un page flow  -->
  			<Objectif>Lire un use case et en formaliser un page flow </Objectif>
        <SousObjectif>Savoir faire une  wireframe ainsi qu'un page flow</SousObjectif>
        <Code> USR </Code>
        <Activite>
            <Type>Brainstorming</Type>
            <Objectif>Un use case / Des scenarios / Des personatas ? Pourquoi ? </Objectif>
            <Code>USR01</Code>
            <Temps>1</Temps>
            <Description>Recherche et brainstorming autour de l'utilité des ces mises en situation. </Description>
        </Activite>
        <Activite>
            <Type>Exercice</Type>
            <Objectif>Réaliser un page flow</Objectif>
            <Code>USR10</Code>
            <Temps>2</Temps>
            <Description>TODO : A partir d'un cahier de use cases succints, réaliser un wireframe ainsi que son page flow</Description>
        </Activite>
  		</Sequence>
  		<Sequence> <!-- Valider le module Maquetter une application -->
        <Objectif> Valider le module Maquetter une application</Objectif>
        <Code> REAC1.1 </Code>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Maquetter une application</Objectif>
          <Code>CERT01</Code>
          <Temps>7</Temps>
          <Description>
            Le formateur met à disposition du stagiaire un cahier des charges d’une application informatique contenant : (spécifications fonctionnelles avec un use case accompagné de la description textuelled’au moins l’un des cas dans le cadre d’une démarche traditionnelle,une charte graphique,le type de l’interface graphique à développer).

            Le stagiaire conçoit une maquette correspondant à l’une des fonctionnalités décrites dans un cahier des charges.
            Il utilise les outils qui permettent de formaliser le diagramme d’enchaînement et la maquette des écrans. Il incorpore ensuite ces éléments dans le dossier de conception technique.
          </Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Maquetter une application</Objectif>
          <Code>CERT01.1</Code>
          <Temps>7</Temps>
          <Description>
            Le formateur met à disposition du stagiaire un cahier des charges d’une application informatique contenant : (spécifications fonctionnelles avec un use case accompagné de la description textuelled’au moins l’un des cas dans le cadre d’une démarche traditionnelle,une charte graphique,le type de l’interface graphique à développer).

            Le stagiaire conçoit une maquette correspondant à l’une des fonctionnalités décrites dans un cahier des charges.
            Il utilise les outils qui permettent de formaliser le diagramme d’enchaînement et la maquette des écrans. Il incorpore ensuite ces éléments dans le dossier de conception technique.
          </Description>
        </Activite>
      </Sequence>
  	</Module>
    <Module group='DeveloppeurLogiciel' language='CCP1'> <!-- Concevoir une base de données -->
      <Objectif>Concevoir une base de données</Objectif>
      <SousObjectif>MEA, MDD, Contraintes, Index </SousObjectif>
      <PreRequis>Etre inscrit à la Code Académie</PreRequis>
      <Materiel>Ordinateur, Internet</Materiel>
      <Sequence> <!-- Etablir le shéma Entité-Association -->
        <Objectif>Etablir le shéma Entité-Association </Objectif>
        <SousObjectif>Cahier des charges, UML, Normalisation, Workbench</SousObjectif>
        <Code>BDD</Code>
        <Activite>
          <Type>Brainstorming</Type>
          <Objectif>Les différents types de bases de données </Objectif>
          <Code>BDD00</Code>
          <Temps>1</Temps>
          <Description>
            Brainstorming et veille sur ce qu'il existe. 
            Veille sur : SQL vs NoSQL
            Veille sur : mySQL, mariaDB, Oracle, PostgreSQL, SQLServer, SQLite, etc...
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Comment modéliser une base de données</Objectif>
          <Code>BDD02</Code>
           <Temps>4</Temps>
          <Materiel>Workbench, Formateur</Materiel>
          <Description>
            Atelier réalisé collectivement avec le formateur. A partir d'un cahier des charges existant, réaliser avec Workbench:
              -un UML
              -un MEA
              -un dictionnaire de données
              -un schéma physique.
            Les apprenants doivent pouvoir définir le bon type de champ.
          </Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Modelisation SQL : Les apprenants de la Code Académie</Objectif>
          <Code>SQL10</Code>
          <Temps>2</Temps>
          <Description>Les apprenants découvrent la modélisation de base ainsi que la normalisation via la création d'une base de donnée représentant les apprenants de la promotion. Un debrief avec les réflexions de chacun sera faite à la fin. Possibilité de le faire en manuscrit ou avec MYSQL workbench. Debrief en groupe en partant d'un example et schéma partager entre les apprenants sur slack. Un rappel devra être réalisé entre SQL et objet</Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Analyser un cahier des charges pour en soustraire la BDD souhaitée</Objectif>
          <Code>SQL20</Code>
          <Temps>6</Temps>
          <Description>
            A partir de plusieurs cahier des charges, les apprenants doivent modéliser la base de données. 
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Etablir le modèle physique de données -->
        <Objectif>Etablir le modèle physique de données </Objectif>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Générer la base de données associée</Objectif>
          <Code>SQL30</Code>
          <Temps>8</Temps>
          <PreRequis>Avoir réalisé SQL20</PreRequis>
          <Description>
            A partir des modélisation de base de données réalisées dans le cadre de SQL20, Créer les script de création de base de données 
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Indexs, Contraintes et fichiers SQL -->
        <Objectif>Indexes, Contraintes et fichiers SQL</Objectif>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Compréhender la structure des fichiers SQL de création DB</Objectif>
          <Code>SQL40</Code>
          <Temps>2</Temps>
          <Description>
            A partir des scripts générés en SQL30.
            Lire décortiquer les fichiers SQL. 
            Analyser ce que sont les contraintes, les indexs.
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!--  Valider le module Concevoir une Base de données -->
        <Objectif> Valider le module Concevoir une Base de données</Objectif>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif> Valider l'ECF</Objectif>
          <Code>CERT02</Code>
          <Temps>7</Temps>
          <Description>FIXME. Copier le reac</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif> Valider l'ECF</Objectif>
          <Code>CERT02.1</Code>
          <Temps>7</Temps>
          <Description>FIXME. Copier le reac</Description>
        </Activite>
      </Sequence>
    </Module>
    <Module group='DeveloppeurLogiciel' language='CCP1'> <!-- Mettre en place une base de données -->
      <Objectif>Mettre en place une base de données</Objectif>
      <SousObjectif>MDD,SQL, Utilisateurs, Alimentation, Backup</SousObjectif>
      <PreRequis>Etre inscrit à la Code Académie</PreRequis>
      <Materiel>Ordinateur, Internet</Materiel>
      <Sequence> <!-- Réaliser des requêtes struturées SQL -->
        <Objectif>Réaliser des requêtes struturées SQL</Objectif>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Initiation au SQL</Objectif>
          <Code>SQL00</Code>
          <Temps>3</Temps>
          <Description>Sur http://www.w3schools.com/sql/trysql.asp?filename=trysql_select_all 
            Réalisez les requêtes suivantes : 
            1) La liste des ContactName de la table Customer
            2) La liste des ProductName qui ont la CaterogyID 1 dans la table Product
            3)  Dans la table Product, au lieu d'avoir les ID  (pour categoryID et SupplierID), qu'on voie les noms des catégories et des fournisseurs , tout celà en une seule requête (edited)
            4) Créez une table utilisateur semblable à celle qu enous pouvons trouver au sein d'un réseau social. Réflechissez aux champs nécessaires et à la structure.
            5) Quels champs seront répetitifs? Est-il possible d'en générer des tables en 1,n . Et/Ou que suis-je en train de vous demander  de faire ?
          </Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Script de création de table et insertion de données</Objectif>
          <Code>SQL11</Code>
          <Temps>3</Temps>
          <Description>Les apprenants améliorent le modéle créer en SQL10 ou repartent d'une correction puis crée le script de création de table à partir de workbench. Par la suite ils font un script de création manuel à partir du modéle donner dans example.png de SQL10</Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Requête de sélection/insertion/insertion MYSQL</Objectif>
          <Code>SQL12</Code>
          <Temps>4</Temps>
          <Description>A partir d'une base de donnée fournie dans le repo github, les apprenants crée et exécute un ensemble de requêtes.</Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Entrainement Requête SQL</Objectif>
          <Code>SQL13</Code>
          <Temps>4</Temps>
          <Description>
            # Exercice d'entraînement aux requêtes MYSQL.

            A partir de la  BDD Northwind , vous devez créer un ensemble de requêtes MYSQL qui répondront aux besoins énumérés dans le readme.  
          </Description>  
        </Activite>
      </Sequence>
      <Sequence> <!-- Les droits d'accès en base de données -->
        <Objectif>Les droits d'accès en base de données</Objectif>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Compréhender la gestion des comptes utilisateur</Objectif>
          <Code>SQL50</Code>
          <PreRequis>Savoir modéliser une base de données</PreRequis>
          <Description>
            FIXME : Ensemble, les apprenants de la code académie doivent préciser pourquoi il est nécessaire de configurer des comptes utilisateurs spécifiques pour chaque client. 
            Suite à celà, ils devront modifier les droits d'accès sur une base de données conçue préalablement. 
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Données de test et Archivage -->
        <Objectif>Administration d'une base de données - Données de test et Archivage</Objectif>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Créer un script d'archivage de base de données</Objectif>
          <Code>SQL60</Code>
          <Description>
            TODO : Activité à réaliser en pair programming. 
            Prenez une base de donnée réalisée précédemment.
            Réaliser un script d'archivage de votre base de données.
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Créer un script d'alimentation de base de données</Objectif>
           <Code>SQL61</Code>
          <Description>
            TODO : Activité à réaliser en pair programming. 
            Prenez une base de donnée réalisée précédemment.
            Réaliser un script d'alimentation de données de test de la base de données. Il est prévu d'insérer 1 million d'enregistrements automatiquement pour réaliser des tests de volumétrie.
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Valider le module Mettre en place une Base de données -->
        <Objectif> Valider le module Mettre en place une Base de données</Objectif>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif> Valider l'ECF</Objectif>
          <Code>CERT03</Code>
          <Temps>7</Temps>
          <Description>FIXME. Copier le reac</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif> Valider l'ECF</Objectif>
          <Code>CERT03.1</Code>
          <Temps>7</Temps>
          <Description>FIXME. Copier le reac</Description>
        </Activite>
      </Sequence>
    </Module>
    <Module group='DeveloppeurLogiciel' language='CCP1'> <!-- Développer une interface utilisateur -->
      <Objectif>Développer une interface utilisateur</Objectif>
      <SousObjectif>Algo, POO, Tests, Erreurs</SousObjectif>
      <PreRequis>Etre inscrit à la Code Académie</PreRequis>
      <Materiel>Ordinateur, Internet</Materiel>
      <Sequence> <!-- Développer une interface utilisateur en HTML5 -->
          <Objectif>Développer une interface utilisateur en HTML5 </Objectif>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Initiation au HTML / CSS</Objectif>
            <Code>HTML00</Code>
            <Temps>4</Temps>
            <Description>OpenClassroom. W3School. AlsaCreation. Projet http://prod.simplon.co/divers/challenges/briefing-challenge-2.zip</Description>
          </Activite>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Debrief sur le HTML</Objectif>
            <Code>HTML01</Code>
            <Temps>2</Temps>
            <Description>Premier mise en commun du travail entre les apprenants. Ensemble, sans intervention du formation, les apprenants doivent débriefer sur leur réalisation du HTML99.</Description>
          </Activite>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Projet : No Images</Objectif>
            <SousObjectif>Travail en Equipe, Concertation, Definition d'un besoin</SousObjectif>
            <Temps>8</Temps>
            <Code>HTML02</Code>
            <Description>Par groupes définis. Développez un site web HTML + CSS sur une thématique libre. Nous vous rajoutons une simple contrainte. N'utilisez aucune image externe.</Description>
          </Activite>
          <Activite>
            <Type>Evaluation</Type>
            <Objectif>Challenge HTML</Objectif>
            <Code>HTML99</Code>
            <Temps>8</Temps>
            <Description>Chaque Mercredi, les apprenants recoivent un challenge ainsi qu'un coéquipier. Le challenge n'est pas à réaliser pendant la formation mais en dehors des cours. Et a rendre le mardi d'après!
            Lorsque les projets sont retournés, un entretien a lieu afin d'aborder les difficultés rencontrées.
            </Description>
          </Activite>
      </Sequence>
      <Sequence> <!-- Styliser une interface utilisateur en CSS3 -->
          <Objectif>Styliser une interface utilisateur en CSS3 </Objectif>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Divs à Gogo </Objectif>
            <Code>CSS00</Code>
            <Temps>4</Temps>
            <Description>
              A partir d'une maquette, les apprenants doivent intégrer le site. Avec une petite découverte de Bootstrap en prime. 
            </Description>
          </Activite>
          <Activite>
             <Type>Exercice</Type>
            <Objectif>Intégrer une maquette simple dans un temps très restreint</Objectif>
            <SousObjectif>Prise de conscience de ses capacités, Gestion du temps, Priorisation</SousObjectif>
            <Code>CSS12</Code>
            <Temps>3.5</Temps>
            <Description>FIXME : Cet exercice est à faire dans les conditions d'un entretien d'embauche pour le poste d'intégrateur web. Une maquette est donnée et chaque apprenant a 3h30 pour l'intégrer (le plus possible). </Description>
          </Activite>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Position et typos</Objectif>
            <Code>HTML04</Code>
            <Temps>4</Temps>
            <Description>
              Pratique et approfondissement des bases en CSS. Positions, marges, paddings etc...
            </Description>
          </Activite>
          <Activite>
             <Type>Exercice</Type>
            <Objectif>Approfondir le CSS</Objectif>
            <Code>CSS15</Code>
            <Description>FIXME : Intégrer des maquettes</Description>
          </Activite>
          <Activite> <!--A Bouttier : Media Queries -->
             <Type>Présentation</Type>
            <Objectif>Les Media Queries</Objectif>
            <Code>CUL10</Code>
            <Description>FIXME : Le responsive et les media queries</Description>
          </Activite>
      </Sequence>
      <Sequence> <!-- Professionnaliser son intégration web  -->
          <Objectif>Professionnaliser son intégration web</Objectif>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Découvrir SASS et la compilation</Objectif>
            <Code>CSS20</Code>
            <Temps>9</Temps>
            <Description>Dans un premier temps, les apprenants devront en un peu moins d'une demi-journée, préparer leur environnement de travail en SASS. 
              Il est attendu à ce que l'installation soit réalisée par le biais de npm et non ruby.Par la suite, ils ont une demi-journée pour intégrer une maquette simple.</Description>
          </Activite>
          <Activite>
             <Type>Exercice</Type>
            <Objectif>S'exercer en intégration web</Objectif>
            <Code>INTEG</Code>
            <Temps>36</Temps>
            <Description>FIXME : Les apprenants choisissent 2 sites web et les intègrent à leurs manière</Description>
          </Activite>
          <Activite>
             <Type>Atelier</Type>
            <Objectif>Boilerplate</Objectif>
            <Code>NONDEFINED</Code>
            <Description>
              FIXME : Découvrir les boilerplate. Voir l'ensemble des fichiers présents au sein du projet. 
            </Description>
          </Activite>
         <Activite>
          <Type>Exercice</Type>
          <Objectif>OPQUAST</Objectif>
          <Code>OPQUAST</Code>
          <Temps>12</Temps>
          <Description>Exercices sur la plateforme d'OPQUAST</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Se faire certifier OPQUAST</Objectif>
          <Code>CERTOP</Code>
          <Temps>4</Temps>
          <Description>Session d'examen sur la plateforme d'OPQUAST</Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Ecrire un algorithme -->
        <Objectif>Ecrire un algorithme</Objectif>
          <Activite>
            <Type>Coding Dojo</Type>
            <Objectif>Application de Bowling</Objectif>
            <Code>ALGO00</Code>
            <Description>Réparti sur deux jours consécutifs, réalisation d'un Bowling en coding dojo. Attention, en fonction du nombre de participants, il peut s'avérer plus efficace de scinder les apprenants en deux groupes. src : https://github.com/bu7ch-learn1ng/fizzbuzz-js</Description>
          </Activite>
          <Activite>
            <Type>Atelier</Type>
            <Objectif>Compréhender la logique algorithmique sans ordinateur</Objectif>
            <SousObjectif>On trouve la solution au problème, puis on l’exprime étape par étape, de manière rigoureuse, en calculant le nombre d’étapes nécessaires.</SousObjectif>
            <Code>ALGO01</Code>
            <Temps>2</Temps>
            <Materiel>Crèpes de l'ENS, Paper Board</Materiel>
            <Description>Exercice des crèpes de l'ENS Bretagne
              Mise à plat sur papier de l'algo
              Mise en forme en code
            </Description>
            <Link>https://pixees.fr/le-crepier-psycho-rigide-comme-algorithme/</Link>
          </Activite>
          <Activite>
            <Type>Atelier</Type>
            <Objectif>Les boucles</Objectif>
            <SousObjectif>Compréhension du if. Découverte du for et du while</SousObjectif>
            <Code>ALGO02</Code>
            <Materiel>Papier/crayon</Materiel>
            <Temps>2h</Temps>
            <Description>
             Par le biais de divers exercices , les apprenants doivent écrire un algo simple sur papier.

            </Description>
          </Activite>
          <Activite>
            <Type>Atelier</Type>
            <Objectif>Les boucles</Objectif>
            <SousObjectif>Savoir choisir quelle boucle entre le for et le while</SousObjectif>
            <Code>ALGO03</Code>
            <Materiel>Papier/crayon</Materiel>
            <Temps>2h</Temps>
            <Description>
             Par le biais de divers exercices , les apprenants doivent écrire un algo sur papier et choisir les bonnes boucles : for/while/if
            </Description>
          </Activite>
          <Activite>
            <Type>Exercice</Type>
            <Objectif> Coding Game : Thor</Objectif>
            <Code>COD01</Code>
            <Description>Connectez-vous sur la plateforme Coding Game. Et réalisez l'exercice de Thor.</Description>
            <Link>https://www.codingame.com/</Link>
          </Activite>
          <Activite>
            <Type>Exercice</Type>
            <Objectif>Les Expressions régulières</Objectif>
            <Code>CUL11</Code>
            <Description>
              Les expressions régulières sont essentielles aujourd'hui mais qu'est-ce. Que ce soit par le biais d'une présentation réalisée par un apprenant, ou un brainstorming, définir ensemble ce qu'est une expression régulière. 

              Les expressions régulières fonctionnent dans la plupart des languages. 

              Suite à celà réaliser les exercices suivants : 

              * Filtrer le fichier ~/.bashrc et retourner les lignes commençant par alias
              * Filtrer le fichier ~/.bashrc et retourner les lignes finissant par yes
              * Valider qu'une adresse mail est in/valide
              * Valider qu'un numéro de téléphone est in/valide
            </Description>
          </Activite>
         <Activite>
          <Objectif>Lecture de code</Objectif>
          <SousObjectif>Savoir lire et verbaliser un bloc de code fonctionnel</SousObjectif>
          <Code>CUL13</Code>
          <Description>
            Un apprenant présente le code qu'il a réalisé. En lisant son bloc d'algo.
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Programmer en Javascript -->
        <Objectif>Programmer en Javascript</Objectif>
        <Activite>
          <Type>CodingDojo</Type>
          <Objectif>Initiation au JavaScipt</Objectif>
          <Temps>7</Temps>
          <Code>JS00</Code>
          <Description>Réparti sur deux jours consécutifs, réalisation d'un FizzBuzz en coding dojo. Attention, en fonction du nombre de participants, il peut s'avérer plus efficace de scinder les apprenants en deux groupes. src : https://github.com/bu7ch-learn1ng/fizzbuzz-js</Description>
        </Activite>
        <Activite>
          <Type>CodingDojo</Type>
          <Objectif>Initiation au JavaScipt</Objectif>
          <Code>JS01</Code>
          <Temps>7</Temps>
          <Description>Coding Dojo : Converting Latin to roman numbers</Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Découverte de tierces bibliothèques</Objectif>
          <Code>JS20</Code>
          <Description>Par groupes de 4, partez à la découverte d'une bibliothèque JS : 
                      grunt
                      gulp
                      backbone
                      babylon
                      d3js
                      tweenmax
                      phaser
                      ember
                      chartjs / chartistjs
                   Vous avez un total de 2 heures pour lire de la documentation et vous renseigner sur le sujet. Voire lancer un premier prototype. 
                   Il vous est demandé à la fin de faire une courte présentation de 5-10 minutes sur la bibliothèque concernée.
          </Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Pratique du JS</Objectif>
          <Code>JS99</Code>
          <Description>Chaque semaine, un challenge !</Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- jQuery -->
        <Objectif>Pratiquer professionnellement du Javascript avec jQuery</Objectif>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Pratique du JQuery</Objectif>
          <SousObjectif>Test Unitaire, Lecture de code</SousObjectif>
          <Code>JS10</Code>
          <Description>
            # Javascript Recall

            Inside you will find a collection of exercises to improve your Javascript.
            You have two important files:
              * questions.spec.js (containing the tests and explains what is expected)
              * questions.js (where you have to code)

            To start, open `SpecRunner.html` in your browser.
          </Description>  
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Initiation au JQuery</Objectif>
          <Code>JS11</Code>
          <Description>Manipulation de DOM, d'evenements... </Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Pratique du JQuery</Objectif>
          <Code>JS12</Code>
          <Description>Application pomodoro</Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- AngularJS -->
        <Objectif>Pratiquer professionnellement du Javascript avec AngularJS</Objectif>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Découverte d'ANGULAR</Objectif>
          <Code>Angular</Code>
          <Description>
            Avec ce coding dojo nous souhaitons réaliser une application de répertoire sur Angular4 (L’API est réalisée avec la techno de votre choix).
            Similaire à une application de répertoire que l’on retrouve sur téléphone avec un système de CRUD classique.
            Tout devra se trouver sur la même page (single page APP), mais vous pouvez utiliser des routes pour naviguer.
            L’application doit nous permettre de :
            Afficher la liste des contacts (Prénom Nom)
            Ajouter un nouveau contact à la liste (la liste s’actualiseras automatiquement après l’ajout)
            Supprimer un contact de la liste
            Pouvoir obtenir les détails du contact au clic (pas de dropdown, le detail s’affiche dans un nouveau component)
            Pouvoir modifier ce dernier si on le souhaite

            L’objet contact doit se présenter comme cela :
            Prénom
            Nom
            Numéro de Téléphone
            Email


          </Description>
        </Activite>
         <Activite>
          <Type>CodingDojo</Type>
          <Objectif>Découverte d'ANGULAR</Objectif>
          <Code>Coding DOJO Angular</Code>
          <Description>
            Avec ce coding dojo nous souhaitons réaliser une application de répertoire sur Angular4 (L’API est réalisée avec la techno de votre choix).
            Similaire à une application de répertoire que l’on retrouve sur téléphone avec un système de CRUD classique.
            Tout devra se trouver sur la même page (single page APP), mais vous pouvez utiliser des routes pour naviguer.
            L’application doit nous permettre de :
            Afficher la liste des contacts (Prénom Nom)
            Ajouter un nouveau contact à la liste (la liste s’actualiseras automatiquement après l’ajout)
            Supprimer un contact de la liste
            Pouvoir obtenir les détails du contact au clic (pas de dropdown, le detail s’affiche dans un nouveau component)
            Pouvoir modifier ce dernier si on le souhaite

            L’objet contact doit se présenter comme cela :
            Prénom
            Nom
            Numéro de Téléphone
            Email


          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Programmer en PHP -->
        <Objectif>Programmer en PHP</Objectif>
        <Activite >
           <Type>Atelier</Type>
          <Objectif>Initiation au PHP</Objectif>
          <Code>PHP00</Code>
          <Description>Vous aurez accès à l'API de PHP sur PHP.net  : http://php.net/manual/fr/ 
            Faites vos exercices sur : http://sandbox.onlinephpfunctions.com/ 
            0) Comprendre le code affiché par défaut sur cette page par le biais de la doc ci-dessus
            1) Afficher  tous les éléments d'un tableau
            2) Counter le nombre d'éléments dans un table. De deux façons.
            3) Chercher un élément dans un table.
            4) Ordonner un tableau en utilisant une methode existante
            5) Ordonner un table en utilisant un tri que vous aurez vous-même développé
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Création d'un formulaire en PHP</Objectif>
          <SousObjectif>Formulaire/DTD/XML/PHP</SousObjectif>
          <Code>PHP01</Code>
          <Temps>8</Temps>
          <Description>
          A partir d'un DTD, définir une première structure XML et s'assurer que le XML respecte le DTD.
          Suite à celà, générer un formulaire PHP. 
          Ce dernier doit pouvoir générer une structure XML correspondante.
          </Description>
        </Activite>
        <Activite>
           <Type>Atelier</Type>
          <Objectif>Approfondissement des boucles en PHP</Objectif>
          <Code>PHP02</Code>
          <Description>
            Manipuler une structure JSON. Et utiliser des méthodes pour parcourir des tableaux.
          </Description>
        </Activite>
        <Activite>
           <Type>Exercice</Type>
          <Objectif>Découverte de la relation BDD-PHP</Objectif>
          <SousObjectif>SQL/PHP/UML</SousObjectif>
          <Code>PHP11</Code>
          <Description>
            Vous vous souvenez de PHP01?
            Après la lecture d'un DTD, vous avez réalisé un formulaire PHP permettant de créer une activité et de l'exporter en XML.
            Mais maintenant, l'affaire se corse. Non seulement Erwann a besoin de l'exporter en XML, mais il aimerait également pouvoir stocker le tout au sein d'une base de données.
          </Description>
        </Activite>
        <Activite>
           <Type>Cours</Type>
          <Objectif>Les expressions régulières en PHP</Objectif>
          <SousObjectif>PHP/RexExp</SousObjectif>
          <Code>PHP12</Code>
          <Description>
            FIXME
          </Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Challenges de PHP</Objectif>
          <SousObjectif>PHP/Algo</SousObjectif>
          <Code>PHP99</Code>
          <Description>
            FIXME
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Programmer en Ruby -->
        <Objectif>Programmer en Ruby</Objectif>
         <Activite>
          <Type>Atelier</Type>
          <Objectif>Initiation au Ruby</Objectif>
          <Code>RUB00</Code>
          <Description>Installer le package ruby
            Utilisez la commande irb ou ruby
            1) Calculer 23456³
            2) Créer une fonction entrant en paramètre une chaine de texte, et qui vous la retourne ainsi que le même texte inversé :
                Ex : maFctQuiCloneEtInverse("Eh ca va la vache") doit me retourner =&gt; "Eh ca va la vache ehcav al av ac hE"
            3) Créer un tableau [0 =&gt; "Pomme", 1=&gt;"Banane", 2=&gt;"Poire", 3=&gt;"Kiwi", 4=&gt;"Wapiti", 5=&gt;"Clémentine",6=&gt;"Fraise", 7=&gt;"Peche"]
            4) Trouver l'intrus :slightly_smiling_face:
            5) Afficher  tous les éléments d'un tableau
            6) Compter le nombre d'éléments dans un tableau. De deux façons.
            7) Chercher un élément dans un table.
            8) Ordonner un tableau en utilisant une methode existante
            9) Ordonner un table en utilisant un tri que vous aurez vous-même développé
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Développer en orienté objet -->
        <Objectif>Développer en orienté objet</Objectif>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Initiation à l'orienté object</Objectif>
          <Code>CUL20</Code>
          <Description>Faites de recherche sur l'orienté objet. Cours / Vidéo etc...
            Après deux heures de recherche et concertation. Mise en commun de la compréhension en groupe.</Description>
        </Activite>
        <Activite>
           <Type>Cours</Type>
          <Objectif>Initiation au concept d'orienté objet</Objectif>
          <Code>POO01</Code>
          <Description>FIXME</Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Ecrire des tests unitaires -->
        <Objectif>Ecrire des tests unitaires</Objectif>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Initiation TDD</Objectif>
          <Code>TDD01</Code>
          <Description>
            Les tests servent à garantir le bon fonctionnement de votre application. Mais aussi à garantir le fait que vous ne fassiez pas de [régressions](https://fr.wikipedia.org/wiki/Test_de_r%C3%A9gression).

            En effet, l'application que vous développez est vouée à évoluer. Une fois la première version livrée à votre client, il est probable et souhaité qu'il revienne vers vous pour une amélioration de certaines fonctionnalités. Mais comment vous assurer que les nouvelles fonctionnalités ne viennent pas perturber l'existant?

            Pour se faire, il existe les tests. Plusieurs types de tests existent, les tests fonctionnels et les tests unitaires.

            Réalisez une veille sur les outils à mettre en place sur vos applications. Et sur comment le faire.
          </Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>S'exercer sur du TDD</Objectif>
          <Code>TDD02</Code>
          <Description>Déterminez si la phrase est un pangramme. Un pangramme (Grec : παν γράμμα, pan gramma, "every letter" ) est une phrase contenant tous les charactères de l'alphabet (au moins une fois). Le pangramme le plus conny en anglais est "The quick brown fox jumps over the lazy dog."</Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Documenter les composants -->
        <Objectif>Documenter les composants</Objectif>
        <Activite>
          <Type>Atelier</Type>
          <Code>FIXME</Code>
          <Objectif>Les erreurs et les exceptions. Quelle différence ?</Objectif>
          <Description>
            FIXME : Atelier sur les
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Code>FIXME</Code>
          <Objectif>Les commentaires, les logs</Objectif>
          <Description>
            FIXME : Atelier sur les
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Valider Développer une interface utilisateur -->
        <Objectif> Valider le module Développer une interface utilisateur</Objectif>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif> Valider l'ECF</Objectif>
          <Code>CERT04</Code>
          <Temps>7</Temps>
          <Description>FIXME. Copier le reac</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif> Valider l'ECF</Objectif>
          <Code>CERT04.1</Code>
          <Temps>7</Temps>
          <Description>FIXME. Copier le reac</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Mettre en place une base de données</Objectif>
          <Code>CERT05</Code>
          <Description>
            Valider les compétences demandées dans le react. Pour le CERT01 il s'agit de Mettre en place une base de données. Selon le react, il vous est demandé : 
            - La base de données est confrome au schéma physique
            - Les règles de nommage sont conformes aux normes qualité de l'entreprise
            - L'intégrité des données est assurée
            - La base de données est opérationnelle avec les droits d'accès prévus.
            - La base de données de test peut être restaurée en cas d'incident. 
          </Description>
        </Activite>
      </Sequence>
    </Module>
    <Module group='DeveloppeurLogiciel' language='CCP2'> <!-- Développer une application web -->
      <Objectif>Développer une application web</Objectif>
      <SousObjectif></SousObjectif>
      <PreRequis>Etre inscrit à la Code Académie</PreRequis>
      <Materiel>Ordinateur, Internet</Materiel>
      <Sequence> <!-- Développer des pages web en lien avec une base de données -->
        <Objectif>Développer des pages web en lien avec une base de données</Objectif>
      </Sequence>
      <Sequence> <!-- Mettre en œuvre une solution de gestion de contenu ou e-commerce -->
        <Objectif>Mettre en œuvre une solution de gestion de contenu ou e-commerce</Objectif>
        <SousObjectif>Wordpress</SousObjectif>
        <Activite >
          <Type>Atelier</Type>
          <Objectif>Découverte de Wordpress</Objectif>
          <Code>WP00</Code>
          <Description>Installer Wordpress sur un serveur apache.</Description>
        </Activite>
        <Activite done="true">
          <Type>Exercice</Type>
          <Objectif>Réaliser son premier thème wordpress</Objectif>
          <Code>WP01</Code>
          <Description>
            Suivre le tutoriel : http://www.fran6art.com/wordpress/creez-votre-theme-wordpress-de-a-a-z/
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Comment développer sous Wordpress</Objectif>
          <Code>WP02</Code>
          <Description>
            Découverte des plugins de débug:
             * SF Admin bar tools
             * Show Current Template. 
           </Description>
        </Activite>
        <Activite>
          <Type>Exercice</Type>
          <Objectif>Plugins sous Wordpress</Objectif>
          <Code>WP03</Code>
          <Description>Réalisez une veille sur les plugins wordpress à connaître. 
            ACF
            JetPack
            Disqus
          </Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Projet professionnel sous Wordpress</Objectif>
          <Code>WP99</Code>
          <Description>
            Pour chaque projet pro:
              * Définition des groupes
              * Création d'un dépot sur bitbucket
              * Analyse du besoin
              * Elaboration d'une expression de besoin
              * Concertation régulière avec le client
              * Elaboration des lots d'évolution  
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Développer une application simple de mobilité numérique -->
        <Objectif>Développer une application simple de mobilité numérique</Objectif>
        <Activite>
          <Objectif>Intégrer une base de données SQLite</Objectif>
          <Code>RN10</Code>
          <Description>FIXME : Reprendre l'application de Reminder. Au sein de cette application, il serait préférable de pouvoir : 
            - Stocker les informations au sein d'une base de données locales
            - Rajouter des images et des URL au sein d'un post it
            - Tester unitairement l'application
            - Améliorer le design pour que l'application supporte plus de 10 postits 
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Utiliser l’anglais dans son activité professionnelle en informatique -->
        <Objectif>Utiliser l’anglais dans son activité professionnelle en informatique</Objectif>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Cours d'anglais avec le Greta</Objectif>
          <Code>GB01</Code>
          <Description>FIXME : Obtenir les compétences nécessaires en anglais.</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Valider la sequence. </Objectif>
          <Code>CERT06</Code>
          <Description>FIXME : Copier le REAC.</Description>
        </Activite>
        <Activite>
          <Type>Evaluation</Type>
          <Objectif>Valider la sequence. </Objectif>
          <Code>CERT06.1</Code>
          <Description>FIXME : Copier le REAC.</Description>
        </Activite>
      </Sequence>
    </Module>
    <Module group='Informaticien' language='FACE'> <!-- Compétences transverses d’un développeur Web -->
      <Objectif>Compétences transverses d’un développeur Web</Objectif>
      <Sequence> <!-- Organiser son activité en développement informatique -->
        <Objectif>Organiser son activité en développement informatique</Objectif>
        <Activite> <!--SCRUM -->
          <Type>Atelier</Type>
          <Objectif>Initiation aux méthodologies SCRUM</Objectif>
          <SousObjectif>Interet d'un scrum master et découverte du travail sour pression</SousObjectif>
          <Code>SCRUM01</Code>
          <Temps>3.5</Temps>
          <Materiel>Legos, 2 formateurs, 1 video projecteur</Materiel>
          <Description>
            Deux formateurs doivent intervenir. Un d'entre eux servant en tant que client, l'autre en tant qu'organisateur et/ou planificateur.

            Le client demande aux groupes de lui réaliser une ville. Et impose des contraintes/
          </Description>
          <Link>http://www.lego4scrum.com/</Link>
          <Link>www.trello.com</Link>
          <Link>waffle.io</Link>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Découverte de GIT et GITHub</Objectif>
          <Code>GIT00</Code>
          <Description>Création d'un compte github. 
            Découverte de git init/add/commit/pull/push/clone</Description>
            <Link>https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf</Link>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Définir le besoin</Objectif>
          <Code>CA00</Code>
          <Temps>21</Temps>
          <Description>
            Présentation du projet au Formateur / Promo.
            1) Définition du scope :
              Qui
              Quoi
              Comment
              Pourquoi
            2) Ecrire la liste des fonctionnalités attendues. 
            3) Ecrire le cahier des charges
            3) Ecrire l'expression de besoin
            4) Définir des lots d'évolutions
            5) Sprint #01  : 
              5.1) Spec fonctionnelle
              5.2) Spec technique
              5.3) Developpement
            6) Sprint #02 : ...
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Analyse du besoin</Objectif>
          <Code>CA10</Code>
          <Temps>7</Temps>
          <Description>
            Regrouper les apprenants en fonction de la technologie qu'ils s'apprêtent à utiliser pour la réalisation de leur projet.
            Par groupes
            1) Réaliser une veille des technologies à utiliser.
            2) En fonction de votre language de prédilection, definissez le framework à mettre en place. 
            3) Après une lecture attentive du cahier des charges, cherchez les bibliothèes que vous aimeriez utiliser.
            3) Réserver 1h30 en fin de journée pour :
              - Présenter votre projet et vos choix technologiques au reste de la table
              - Débattre sur les choix réalisés. 
            4) S'il vous reste du temps, commencer à préparer l'environnement de travail. 
          </Description>
        </Activite>
         <Activite>
          <Type>Atelier</Type>
          <Objectif>Planification de la charge</Objectif>
          <Code>CA20</Code>
          <Temps>7</Temps>
          <Description>
            Regrouper les apprenants en fonction de la technologie qu'ils s'apprêtent à utiliser pour la réalisation de leur projet.
            Individuellement :
            1) Méthode agile + Estimation des durées
            2)  En estimant à un lot d'évolution par mois. Vous aurez un jour par semaine + deux WE par mois pour la réalisation des taches. 
              3) Sprint #01  : 
                3.1) Spec fonctionnelle
                3.2) Spec technique
                3.3) Developpement
              4) Sprint #02 : ...
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Actualiser et partager ses compétences en développement informatique -->
        <Objectif>Actualiser et partager ses compétences en développement informatique</Objectif>
        <Activite> <!--Veille -->
          <Type>Brainstorming</Type>
          <Objectif>Initiation à la veille technologique</Objectif>
          <SousObjectif>Changement des habitudes pour intégrer la veille dans son quotidien</SousObjectif>
          <Code>CUL01</Code>
          <Description>
            Ensemble les apprenants et le formateurs listent un ensemble d'outils et de sites pour réaliser une veille efficace. Quels sont les clés d'une bonne veille ? 
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Préparation à l'oral de la certification</Objectif>
          <Code>CA40</Code>
          <Temps>14</Temps>
          <Description>
            Face à la promotion présentez votre projet comme si vous étiez face au jury final.
          </Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Configurer son poste de travail -->
        <Objectif>Configurer son poste de travail</Objectif>
        <Activite >
          <Type>Atelier</Type>
          <Objectif>Installation de Linux</Objectif>
          <Code>LIN01</Code>
          <Temps> 3.5 </Temps>
          <Description>Pour alléger le réseau, il est préférable de préparer des clés de boot en amont. Les apprenants découvrent par eux même comment insaller l'OS sur leur système. Et commencent à partager leurs connaissances.</Description>
        </Activite>
        <Activite >
          <Type>Atelier</Type>
          <Objectif>Découverte du terminal : Terminus du MIT</Objectif>
          <Code>LIN02</Code>
          <Description>cd, .., ls, mkdir, ps, rm</Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Découverte du terminal</Objectif>
          <Code>LIN02b</Code>
          <Description>cd, .., ls, mkdir, ps, rm, chmod, chown, chgrp, man, xkill, ...</Description>
          <Link>http://juliend.github.io/linux-cheatsheet/</Link>
        </Activite>
        <Activite  >
          <Type>Atelier</Type>
          <Objectif>Découverte de l'editeur VIM</Objectif>
          <Code>LIN03</Code>
          <Description>Après avoir un peu pratiqué les tutoriels, les apprenants doivent utiliser vim pour leur premier projet.</Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Découverte du terminal</Objectif>
          <Code>LIN04</Code>
          <Description>
            Ce dépot permet de télécharger un script sh qui permet d'approfondir ses connaissances dans le shell.
          </Description>
          <Link>https://github.com/Boyquotes/bash_bots</Link>
        </Activite>
        <Activite> <!-- Gestion des droits Linux -->
          <Type>Atelier</Type>
          <Objectif>Les droits d'accès sous linux </Objectif>
          <Code>CUL12</Code>
          <Description>FIXME</Description>
        </Activite>
        <Activite> <!-- Les raccourcis claviers -->
          <Type>Atelier</Type>
          <Objectif>Les raccourcis claviers </Objectif>
          <Code>CUL22</Code>
          <Description>FIXME</Description>
        </Activite>
      </Sequence>
      <Sequence> <!-- Connaître son métier de demain : Développeur web -->
        <Objectif>Connaître son métier de demain : Développeur web</Objectif>
        <Code>MET</Code>
        <Activite >
          <Type>Brainstorming</Type>
          <Objectif>Qu'est-ce qu'un développeur web junior</Objectif>
          <Code>MET00</Code>
          <Temps>1</Temps>
          <SousObjectif>Comprendre les attendus de la formation</SousObjectif>
          <Description>Savoir résoudre des problématiques. Analyse et mise en place d'un besoin. Informatitien. Geek a tout faire. </Description>
        </Activite>
        <Activite>
          <Type>Brainstorming</Type>
          <Code>MET01</Code>
          <Temps>1</Temps>
          <Objectif>Quels métiers du numérique connaissez-vous</Objectif>
          <Description>Web Designer, Référenceur, Big Data, Admin BDD, Designer, Integrateur, Maintenance, Testing, Developpeur Front/Back/Fullstack, Architecte, Chef de projet...</Description>
        </Activite>
        <Activite>
          <Type>Brainstorming</Type>
          <Objectif>Les langages de développement</Objectif>
          <Code>MET02</Code>
          <Temps>1</Temps>
          <Description>Quels sont les langages Web ? Et c'est quoi leurs spécificités? HTML, CSS, JS, PHP, Ruby, ASP, Java, Applet, CoffeeScript, SQL, Flash, Go, Dart,Python..</Description>
        </Activite>
        <Activite>
          <Type>Brainstorming</Type>
          <Objectif>Quelles languages de programmation</Objectif>
          <Code>MET03</Code>
          <Temps>1</Temps>
          <SousObjectif>Avoir le B.A.BA des languages de programmation</SousObjectif>
          <Description>Java, JS, PHP, HTML, CSS, .NET, GO, DART </Description>
        </Activite>
        <Activite><!--Remuneration -->
          <Type>Brainstorming</Type>
          <Objectif> Débat autour des différentes méthodes de rémunération de sites internet</Objectif>
          <Code>MET04</Code>
          <Description>FIXME</Description>
        </Activite>
        <Activite>
          <Type>Brainstorming</Type>
          <Objectif>Quelles structures de données connaissez vous?</Objectif>
          <Code>MET05</Code>
          <Temps>1</Temps>
          <SousObjectif>Avoir le B.A.BA des data</SousObjectif>
          <Description>XML, JSON, YAML, CSV, TXT (md, asciidoc), ... </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Découvrir la spécialisation</Objectif>
          <Code>MET10</Code>
          <Description>Découvrir ce qui attend l'apprenant lors de la spécialisation</Description>
        </Activite>
        <Activite> <!-- E.DUCLOS : SEO -->
          <Type>Cours</Type>
          <Objectif>Le référencement SEO</Objectif>
          <Code>CUL14</Code>
          <Description>FIXME</Description>
        </Activite>
      </Sequence>
    </Module>
    <Module group='DemandeurEmploi' language='FACE'> <!-- TRE et entretiens -->
      <Objectif>Compétenses transverses du secteur de l’emploi</Objectif>
      <Sequence> <!-- Développer son image sur le web -->
        <Objectif>Développer son image sur le web</Objectif>
        <Code>IMG</Code>
        <Activite>
          <Type>Atelier</Type>
          <Objectif>Réalisation d'un portfolio</Objectif>
          <Code>IMG10</Code>
          <Description>
            Réalisation d'un CV / Portfolio professionnel hébergé sur une gitpage.
          </Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Code>IMG20</Code>
          <Objectif>Réaliser son CV sur DoYouBuzz</Objectif>
        </Activite>
      </Sequence>
      <Sequence> <!-- Les entreprises sur le bassin rennais -->
        <Objectif>Les entreprises sur le bassin rennais</Objectif>
        <Code>REN</Code>
        <Activite>
          <Type>Brainstorming</Type>
          <Objectif> Les entreprises de la région</Objectif>
          <Code>REN10</Code>
          <Temps>1</Temps>
          <Description>
            Ensemble, les apprenants listent les entreprises qu'ils connaissent sur le bassin rennais. Et doivent répondre à un ensemble de questions les concernants : 
             Quelle taille ont-elles? Ont-ils des recrutements en ce moment? Et quels profils sont recherchés? ...
          </Description>
        </Activite>
        <Activite>
          <Type>Visite</Type>
          <Objectif>Forum de la femme du numérique</Objectif>
          <Code>REN50</Code>
          <Temps>4</Temps>
          <Description>
            Sortie en groupe au forum de la femme du numérique afin de découvrir le milieu Rennais
          </Description>
        </Activite>
      </Sequence>
      <Sequence><!-- Le savoir etre en entreprise -->
        <Objectif>Le savoir être en entreprise </Objectif>
        <Code>ETR</Code>
        <Activite>
          <Type>Exercice</Type>
          <Code>ETR10</Code>
          <Objectif>Atelier de lecture</Objectif>
          <SousObjectif>Comprendre qu'il est important de tout lire dans un exercice</SousObjectif>
          <Description></Description>
          <Link></Link>
        </Activite>
      </Sequence>
      <Sequence><!-- Préparation à un entretien -->
        <Objectif>Préparation à un entretien </Objectif>
        <Code>ENT</Code>
        <Activite>
          <Type>Atelier</Type>
          <Code>ENT10</Code>
          <Objectif>Les questions d'un recruteur RH </Objectif>
           <Description>Lire et échanger sur une liste de questions que peuvent avoir un recruteur RH</Description>
        </Activite>
        <Activite>
          <Type>Atelier</Type>
          <Code>ENT20</Code>
          <Objectif>Les questions d'un recruteur IT </Objectif>
           <Description>Lire et échanger sur une liste de questions que peuvent avoir un recruteur technique</Description>
        </Activite>
      </Sequence>
    </Module>
  </Programme>
  
</root>